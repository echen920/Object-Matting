// generated by Fast Light User Interface Designer (fluid) version 1.0300

#include "CubeViewUI.h"

void CubeViewUI::cb_vrot_i(Fl_Roller* o, void*) {
  cube->v_angle(((Fl_Roller *)o)->value());
cube->redraw();
}
void CubeViewUI::cb_vrot(Fl_Roller* o, void* v) {
  ((CubeViewUI*)(o->parent()->parent()->parent()->user_data()))->cb_vrot_i(o,v);
}

void CubeViewUI::cb_ypan_i(Fl_Slider* o, void*) {
  cube->pany(((Fl_Slider *)o)->value());
cube->redraw();
}
void CubeViewUI::cb_ypan(Fl_Slider* o, void* v) {
  ((CubeViewUI*)(o->parent()->parent()->parent()->user_data()))->cb_ypan_i(o,v);
}

void CubeViewUI::cb_xpan_i(Fl_Slider* o, void*) {
  cube->panx(((Fl_Slider *)o)->value());
cube->redraw();
}
void CubeViewUI::cb_xpan(Fl_Slider* o, void* v) {
  ((CubeViewUI*)(o->parent()->parent()->parent()->user_data()))->cb_xpan_i(o,v);
}

void CubeViewUI::cb_hrot_i(Fl_Roller* o, void*) {
  cube->h_angle(((Fl_Roller *)o)->value());
cube->redraw();
}
void CubeViewUI::cb_hrot(Fl_Roller* o, void* v) {
  ((CubeViewUI*)(o->parent()->parent()->parent()->user_data()))->cb_hrot_i(o,v);
}

void CubeViewUI::cb_zoom_i(Fl_Value_Slider* o, void*) {
  cube->size=(((Fl_Value_Slider *)o)->value())*10;
cube->redraw();
}
void CubeViewUI::cb_zoom(Fl_Value_Slider* o, void* v) {
  ((CubeViewUI*)(o->parent()->parent()->user_data()))->cb_zoom_i(o,v);
}

CubeViewUI::CubeViewUI() {
  { mainWindow = new Fl_Window(620, 560);
    mainWindow->user_data((void*)(this));
    { Fl_Group* o = new Fl_Group(5, -2, 555, 552);
      { VChange = new Fl_Group(30, 30, 495, 520);
        { vrot = new Fl_Roller(55, 135, 20, 265);
          vrot->minimum(-180);
          vrot->maximum(180);
          vrot->step(1);
          vrot->callback((Fl_Callback*)cb_vrot);
        } // Fl_Roller* vrot
        { ypan = new Fl_Slider(80, 134, 20, 268);
          ypan->minimum(-20);
          ypan->maximum(20);
          ypan->callback((Fl_Callback*)cb_ypan);
        } // Fl_Slider* ypan
        VChange->end();
      } // Fl_Group* VChange
      { HChange = new Fl_Group(5, 70, 450, 445);
        { xpan = new Fl_Slider(155, 463, 285, 22);
          xpan->type(1);
          xpan->minimum(-20);
          xpan->maximum(20);
          xpan->callback((Fl_Callback*)cb_xpan);
        } // Fl_Slider* xpan
        { hrot = new Fl_Roller(155, 495, 290, 20);
          hrot->type(1);
          hrot->minimum(-180);
          hrot->maximum(180);
          hrot->step(1);
          hrot->callback((Fl_Callback*)cb_hrot);
        } // Fl_Roller* hrot
        HChange->end();
      } // Fl_Group* HChange
      { MainView = new Fl_Group(35, -2, 525, 427);
        { cube = new CubeView(140, 118, 325, 307, "label");
          cube->box(FL_DOWN_BOX);
          cube->color(FL_BACKGROUND_COLOR);
          cube->selection_color(FL_BACKGROUND_COLOR);
          cube->labeltype(FL_NORMAL_LABEL);
          cube->labelfont(0);
          cube->labelsize(14);
          cube->labelcolor(FL_FOREGROUND_COLOR);
          cube->align(Fl_Align(FL_ALIGN_CENTER));
          cube->when(FL_WHEN_RELEASE);
        } // CubeView* cube
        MainView->end();
      } // Fl_Group* MainView
      { zoom = new Fl_Value_Slider(150, 64, 300, 36);
        zoom->type(1);
        zoom->maximum(2);
        zoom->step(0.05);
        zoom->value(1);
        zoom->textsize(14);
        zoom->callback((Fl_Callback*)cb_zoom);
      } // Fl_Value_Slider* zoom
      o->end();
    } // Fl_Group* o
    mainWindow->end();
  } // Fl_Window* mainWindow
}

void CubeViewUI::show(int argc, char **argv) {
  mainWindow->show(argc, argv);
}
